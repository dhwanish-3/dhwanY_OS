alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE + 1];

[PROCESS_TABLE + currentPID * 16 + 9] = -1;

[PROCESS_TABLE + currentPID * 16 + 13] = SP;

SP = [PROCESS_TABLE + currentPID * 16 + 11] * 512 - 1;

backup;

multipush(EIP);

print "ex";

if ((EC != 0) || ([PROCESS_TABLE + currentPID * 16 + 13] == (PTLR * 512 - 1))) then
    print "Fatal Error";

    multipush(R0, R1);

    R1 = 3;
    R2 = currentPID;
    call MOD_1;

    call MOD_5;

    multipop(R0, R1);
endif;

alias blockNumber R2;
if ((EPN > 3) && (EPN < 8)) then // code page
    blockNumber = [DISK_MAP_TABLE + currentPID * 10 + EPN];

    multipush(R0, R1, R2);

    R1 = 5;
    R2 = blockNumber;
    call MOD_2;
    print "page fault";

    [PTBR + 2 * EPN] = R0;
    [PTBR + 2 * EPN + 1] = "1100";

    multipop(R0, R1, R2);
endif;

if (EPN > 1 && EPN < 4) then // Heap
    multipush(R0, R1, R2);

    R1 = 1;
    call MOD_2;
    [PTBR + 4] = R0;
    [PTBR + 5] = "1110";
    print "heap";

    R1 = 1;
    call MOD_2;
    [PTBR + 6] = R0;
    [PTBR + 7] = "1110";

    multipop(R0, R1, R2);
endif;

[PROCESS_TABLE + currentPID * 16 + 9] = 0;

multipop(EIP);

restore;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
SP = SP + 1;

[[PTBR + 2 * (SP / 512)] * 512 + (SP % 512)] = EIP;

ireturn;