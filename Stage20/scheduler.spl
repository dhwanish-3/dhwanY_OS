alias currentPID R0;
alias process_table_entry R1;

currentPID = [SYSTEM_STATUS_TABLE + 1];
process_table_entry = PROCESS_TABLE + 16 * currentPID;

multipush(BP);

[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;

alias i R2;
alias state R3;
alias newPID R4;

newPID = 0;
i = currentPID + 1;
while (i < 16) do
    state = [PROCESS_TABLE + i * 16 + 4];
    if (state == READY || state == CREATED) then
        newPID = i;
        break;
    endif;
    i = i + 1;
endwhile;

process_table_entry = PROCESS_TABLE + (newPID * 16);
SP = [process_table_entry + 11] * 512 + [process_table_entry + 12];
PTBR = [process_table_entry + 14];
PTLR = [process_table_entry + 15];

[SYSTEM_STATUS_TABLE + 1] = newPID;

if (state == CREATED) then
    SP = [process_table_entry + 13];
    BP = [[process_table_entry + 11] * 512];
    [process_table_entry + 4] = RUNNING;
    [process_table_entry + 9] = 0; // mode flag
    ireturn;
endif;

[process_table_entry + 4] = RUNNING;

multipop(BP);

return;