alias functionNumber R1;

// get free page
if (functionNumber == 1) then
    // increment wait_mem_count
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;

    while ([SYSTEM_STATUS_TABLE + 2] == 0) do
        [PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_MEM;

        multipush(R1);
        call MOD_5;
        multipop(R1);
    endwhile;

    // decrement wait_mem_count
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
    
    alias memoryFreeIndex R2;
    // since available pages for user processes are from 76 to 127
    memoryFreeIndex = 76;

    while (([MEMORY_FREE_LIST + memoryFreeIndex] > 0) && (memoryFreeIndex < 128)) do
        memoryFreeIndex = memoryFreeIndex + 1;
    endwhile;

    [MEMORY_FREE_LIST + memoryFreeIndex] = 1;
    
    R0 = memoryFreeIndex;
    breakpoint;
    return;
endif;

// release page number
if (functionNumber == 2) then
    alias pageNumber R2;

    // decrement num of process using this page
    [MEMORY_FREE_LIST + pageNumber] = [MEMORY_FREE_LIST + pageNumber] - 1;

    if ([MEMORY_FREE_LIST + pageNumber] == 0) then
        // increment memory free count
        [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
    endif;

    alias i R3;
    i = 1;

    while (i < 16) do
        if ([PROCESS_TABLE + 16 * i + 4] == WAIT_MEM) then
            [PROCESS_TABLE + 16 * i + 4] = READY;
        endif;
        i = i + 1;
    endwhile;
    breakpoint;
    return;
endif;