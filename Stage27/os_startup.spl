// module 7
loadi(54, 67);
loadi(55, 68);

// idle code
loadi(69, 11);

// scheduler(module 5)
loadi(50, 63);
loadi(51, 64);

SP = 76 * 512 - 1;

call BOOT_MODULE;

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

// Library
[PTBR + 0] = -1;
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";

// Heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

// Code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

// Stack
[PTBR + 16] = 70;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

[70 * 512] = [69 * 512 + 1];

// setting up process table for IDLE
[PROCESS_TABLE] = 0; // tick
[PROCESS_TABLE + 1] = 0; // process id of IDLE is 0
[PROCESS_TABLE + 3] = 0; // userid of kernel
[PROCESS_TABLE + 4] = RUNNING;
[PROCESS_TABLE + 11] = 76;
[PROCESS_TABLE + 13] = 8 * 512;
[PROCESS_TABLE + 12] = 0;
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;

[SYSTEM_STATUS_TABLE + 1] = 0;

SP = 8 * 512;

// SWAPPER_DAEMON
PTBR = PAGE_TABLE_BASE + 15 * 20;
PTLR = 10;

// library
[PTBR+0] = -1;
[PTBR+1] = "0000"; 
[PTBR+2] = -1;
[PTBR+3] = "0000";

// heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// code of the IDLE process
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[81 * 512] = [69 * 512 + 1];
SP = 8 * 512;

[PROCESS_TABLE + 15 * 16 + 0] = 0;
[PROCESS_TABLE + 15 * 16 + 1] = 15; //process id of swappper is 15
[PROCESS_TABLE + 15 * 16 + 4] = CREATED;
[PROCESS_TABLE + 15 * 16 + 11] = 82; //first available free page is 80 (0 - 79 are system reserved)
[PROCESS_TABLE + 15 * 16 + 12] = 0;
[PROCESS_TABLE + 15 * 16 + 13] = 8 * 512;
[PROCESS_TABLE + 15 * 16 + 14] = PTBR;
[PROCESS_TABLE + 15 * 16 + 15] = 10;

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

ireturn;